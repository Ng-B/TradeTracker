<!-- views/index.ejs -->
<!DOCTYPE html>
<html>

<head>
  <title>Forex Trades</title>
  <!-- CSS Styles -->
  <link rel="stylesheet" type="text/css" href="css/style.css" />
  <!-- External Libraries -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
  <link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/css/theme.default.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/tilt.js/1.2.1/tilt.jquery.min.js"></script>
  <!-- JS Scripts -->
  <script src="js/main.js"></script>
  <script>
    window.formatDate = function (date) {
      const formattedDate = new Date(date);

      // Get the parts of the date and time
      const year = formattedDate.getFullYear();
      const month = String(formattedDate.getMonth() + 1).padStart(2, '0');
      const day = String(formattedDate.getDate()).padStart(2, '0');
      const hours = String(formattedDate.getHours()).padStart(2, '0');
      const minutes = String(formattedDate.getMinutes()).padStart(2, '0');

      // Create the formatted date string in the 24-hour format
      return `${year}-${month}-${day}T${hours}:${minutes}`;
    };
  </script>
</head>

<body>
  <h1>Forex Trades</h1>

  <!-- New Trade Form -->
  <form class="add-trade-form animate__animated animate__fadeIn" action="/trades" method="POST">
    <div class="form-row">
      <div class="form-group">
        <label for="price">Price :</label>
        <input type="number" id="price" name="price" step="0.00001" required>
      </div>
      <div class="form-group">
        <label for="pair">Pair:</label>
        <input type="text" id="pair" name="pair" required>
      </div>
      <div class="form-group">
        <label for="lot">Lot:</label>
        <input type="text" id="lot" name="lot" required>
      </div>
    </div>
    <div class="form-row">
      <div class="form-group">
        <label for="openTime">Open Time:</label>
        <input type="datetime-local" id="openTime" name="openTime"
          pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}" required>
      </div>
      <div class="form-group">
        <label for="hour">Hour:</label>
        <input type="number" id="hour" name="hour">
      </div>
      <div class="form-group">
        <label for="minute">Minute:</label>
        <input type="number" id="minute" name="minute">
      </div>
    </div>
    <div class="form-row">
      <div class="form-group">
        <label for="sl">Stop Loss (SL):</label>
        <input type="number" id="sl" name="sl" step="0.00001" required>
      </div>
      <div class="form-group">
        <label for="tp">Take Profit (TP):</label>
        <input type="number" id="tp" name="tp" step="0.00001" required>
      </div>
      <div class="form-group">
        <button type="submit" class="animate__animated animate__bounce">Add Trade</button>
      </div>
    </div>
  </form>
  <!-- TradingView Widget -->
  <div class="tradingview-widget-container animate__animated animate__fadeIn">
    <div class="tradingview-widget-container__widget"></div>
    <div class="tradingview-widget-copyright">
      <a href="https://www.tradingview.com/" rel="noopener nofollow" target="_blank">
        <span class="blue-text">Track all markets on TradingView</span>
      </a>
    </div>
    <script type="text/javascript" src="https://s3.tradingview.com/external-embedding/embed-widget-forex-heat-map.js"
      async>
        {
          "width": 770,
            "height": 400,
              "currencies": [
                "EUR",
                "USD",
                "JPY",
                "GBP",
                "CHF",
                "AUD",
                "CAD",
                "NZD"
              ],
                "isTransparent": false,
                  "colorTheme": "dark",
                    "locale": "en"
        }
      </script>
  </div>

  <!-- Export Button -->
  <button id="export-btn" class="animate__animated animate__bounce">Export to Excel</button>

  <table class="trade-table">
    <!-- Table headers -->
    <thead>
      <tr>
        <th class="th-nums">Price</th>
        <th style="width: 7%;">Pair</th>
        <th class="th-strength">Lot</th>
        <th class="th-date">Open Time</th>
        <th class="th-strength">Hour</th>
        <th class="th-strength">Minute</th>
        <th class="th-nums">SL</th>
        <th class="th-nums">TP</th>
        <th class="th-nums">Result</th>
        <th class="th-date">Close Time</th>
        <th style="width: 30%;">Comment</th>
        <th style="width: 5%;">Action</th> <!-- New column for the update button -->
      </tr>
    </thead>
    <!-- Table body -->
    <tbody>
      <% trades.forEach((trade)=> { %>
        <tr data-trade-id="<%= trade._id %>">
          <td>
            <%= trade.price %>
          </td>
          <td>
            <%= trade.pair %>
          </td>
          <td>
            <%= trade.lot %>
          </td>
          <td class="datetime-cell"><input type="datetime-local"
              value="<%= trade.openTime.toISOString().slice(0, -8) %>"></td>
          <td class="number-table"><input type="number" value="<%= trade.hour %>" min="0" max="23"></td>
          <td class="number-table"><input type="number" value="<%= trade.minute %>"></td>
          <td><input type="number" value="<%= trade.sl %>"></td>
          <td><input type="number" value="<%= trade.tp %>"></td>
          <td class="<%= trade.result & trade.result < 0 ? 'negative-result' : '' %>" data-result="<%= trade.result %>">
            <input type="text" data-field="result" value="<%= trade.result %>" class="<%= trade.result %>">
          </td>
          <td class="datetime-cell">
            <input type="datetime-local"
              value="<%= trade.closeTime ? trade.closeTime.toISOString().slice(0, -8) : '' %>">
          </td>
          <td><input type="text" value="<%= trade.comment %>"></td>
          <td>
            <button class="update-trade-btn animate__animated animate__bounce">Update</button>
            <button class="delete-trade-btn animate__animated animate__bounce">Delete</button>
          </td>
        </tr>
        <% }); %>
    </tbody>
  </table>

  <script src="https://unpkg.com/xlsx/dist/xlsx.full.min.js"></script>
  <script>
    // JavaScript
    $(document).ready(function () {
      $('.tablesorter').tablesorter();

      $('td[data-result]').each(function () {
        var result = parseInt($(this).data('result'));
        if (result < 0) {
          $(this).addClass('negative-result');
        } else if (result > 0) {
          $(this).addClass('positive-result');
        }
      });
    });

    $(document).ready(function () {
      // Tilt effect on the "Add Trade" form
      $('.add-trade-form').tilt({
        maxTilt: 10,
        perspective: 1000,
        easing: "cubic-bezier(.03,.98,.52,.99)",
        scale: 1.03
      });

      // Update Trade Button
      $('.update-trade-btn').click(function () {
        var $row = $(this).closest('tr');
        var tradeId = $row.data('trade-id');
        var price = $row.find('td').eq(0).val();
        var openTime = $row.find('input[type="datetime-local"]').eq(0).val();
        var hour = $row.find('input[type="number"]').eq(0).val();
        var minute = $row.find('input[type="number"]').eq(1).val();
        var sl = $row.find('input[type="number"]').eq(2).val();
        var tp = $row.find('input[type="number"]').eq(3).val();
        var result = $row.find('input[data-field="result"]').val();
        var closeTime = $row.find('input[type="datetime-local"]').eq(1).val();
        var comment = $row.find('input[type="text"]').eq(1).val();

        // Send an AJAX request to update the trade
        $.ajax({
          type: "PUT",
          url: "/trades/" + tradeId,
          data: {
            price: price,
            openTime: openTime,
            hour: hour,
            minute: minute,
            sl: sl,
            tp: tp,
            result: result,
            closeTime: closeTime,
            comment: comment
          },
          success: function (response) {
            console.log(response);
            // Update the table row with the updated data
            $row.find('input[type="number"]').eq(0).val(response.price);
            $row.find('input[type="datetime-local"]').eq(0).val(response.openTime.toISOString().slice(0, -8));
            $row.find('input[type="number"]').eq(0).val(response.hour);
            $row.find('input[type="number"]').eq(1).val(response.minute);
            $row.find('input[type="number"]').eq(2).val(response.sl);
            $row.find('input[type="number"]').eq(3).val(response.tp);
            $row.find('input[data-field="result"]').val(response.result).removeClass().addClass(response.result);
            $row.find('input[type="datetime-local"]').eq(1).val(response.closeTime.toISOString().slice(0, -8));
            $row.find('input[type="text"]').eq(1).val(response.comment);
            $row.find('h6').text(response.closeTime);
          },
          error: function (error) {
            console.log(error);
          }
        });
      });

      // Delete Trade Button
      $('.delete-trade-btn').click(function () {
        var $row = $(this).closest('tr');
        var tradeId = $row.data('trade-id');

        // Send an AJAX request to delete the trade
        $.ajax({
          type: "DELETE",
          url: "/trades/" + tradeId,
          success: function (response) {
            console.log(response);
            // Remove the table row
            $row.remove();
          },
          error: function (error) {
            console.log(error);
          }
        });
      });

    // Export to Excel
    function exportToExcel() {
      const table = document.querySelector('.trade-table');
      const headers = Array.from(table.querySelectorAll('th')).map(header => header.innerText);
      const rows = Array.from(table.querySelectorAll('tr')).map(row => Array.from(row.querySelectorAll('td')).map(cell => {
        const input = cell.querySelector('input');
        if (input) {
          return String(input.value);
        } else {
          return String(cell.innerText);
        }
      }));

      const data = [headers, ...rows];

      const worksheet = XLSX.utils.aoa_to_sheet(data);
      const workbook = XLSX.utils.book_new();
      XLSX.utils.book_append_sheet(workbook, worksheet, 'Trades');

      const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });
      const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });

      const link = document.createElement('a');
      link.href = URL.createObjectURL(blob);
      link.setAttribute('download', 'trades.xlsx');
      link.click();
    }

      // Attach click event listener to the export button
      document.getElementById('export-btn').addEventListener('click', exportToExcel);
  // Animate.css
  $('.animate__animated').addClass('animate__fadeIn');
  });
  </script>
  <!-- Include necessary JavaScript libraries if required -->
</body>

</html>